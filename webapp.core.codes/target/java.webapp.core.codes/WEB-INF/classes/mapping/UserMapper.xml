<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java.webapp.core.codes.dao.UserDao">
    <resultMap id="userLoginMap" type="User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
    </resultMap>
	
    <resultMap id="userMap" type="User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        
        <result property="status" column="status"/>
        <result property="roleId" column="role_id"/>
        <result property="parentUserId" column="parent_user_id"/>
    </resultMap>
    
    
   	<select id="getUserById" parameterType="map" resultMap="userLoginMap"> 
  	  	 SELECT user_id, username, password, status, role_id, parent_user_id FROM `core.codes`.user where user_id = #{userId}; 
 	</select>
    	
   	<select id="validateUserLogin" parameterType="map" resultMap="userLoginMap"> 
  	  	 SELECT user_id, username, password FROM `core.codes`.user where username=#{username} and password = #{password} and status = 1;  
 	</select>
 	
   	<select id="getUserByUsername" resultMap="userLoginMap">
   	     SELECT user_id, username, password, status, role_id, parent_user_id FROM `core.codes`.user where username=#{username};  
   	</select>

   	<select id="getLoginCount" resultType="int">
   	    SELECT count(status) FROM (
			SELECT * FROM `core.codes`.user_login_history order by created_date desc limit 0, #{loginAttemptLimit}) i 
		WHERE status = (SELECT status_type_id from status_type where status_type_name = 'FAIL') GROUP BY status; 
   	</select>
   	
   	<update id="updateLastLogin" parameterType="int">
   	    UPDATE `core.codes`.user set last_login = NOW() where user_id = #{userId}   	    
   	</update> 
   	
   	<update id="updateUserStatus" parameterType="map">
   	    UPDATE `core.codes`.user set status=#{status} where user_id = #{userId}   
   	    
   	</update>
   	
   	<insert id="insertLoginHistory" parameterType="User">
   	    INSERT INTO user_login_history (user_id, status, login_type)
   	    VALUES
   	    (
   	    	#{userId}, #{status}, 1
   	    )
   	</insert>
</mapper>